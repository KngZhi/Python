# coding:UTF-8## 1# def stupid_computer (cpu,keyborad):# 	print "What's your cpu are? :%s " %cpu# 	print "What kind of keyborad you like? %s" %keyborad# print "We do like computers.And now i'm ganna ask you some questions"# ARM = "binbo"# ban = "Shit"# stupid_computer(ARM, ban)## 2# def favor_of_grils (height, hobby, weight):# 	print "My dream girls height is %r" %height# 	print "My dream girls hobby is %s" %hobby# 	print "My dream girls weight is %s" %weight# print "So, may I ask you 'what's your favor of girls? "# favor_of_grils("170cm", 'sports+books', '52k')## 3##运用 raw_input 到函数内的参数# def filetransfer (orginal, type):# 	print "Confirm again!  Your files are: %r " %orginal# 	print "And transfer to %r? " %type# from_file = raw_input("Which file you wanna copy? ")# to_file = raw_input("And copy to where? ")# filetransfer(from_file,to_file)# # 4 复制文件# #将函数编程真正意义上的 copy 行为# def file_trans (orginal,target):# 	with open (target, 'wb') as indate:# 		indate.write(open(orginal, 'rb').read())# from_file = raw_input("You want copy from? ")# raw_input("Yes Please.")# to_file = raw_input("To here ")# file_trans(from_file,to_file)# print "DONE!"# # 5 复制文件# import shutil# def file_trans_2(target,orginal):# 	shutil.copyfile(target,orginal)# from_file = raw_input("You want copy from? ")# raw_input("Yes Please.")# to_file = raw_input("To here ")# file_trans_2(to_file,from_file)# print "DONE!"# # 6 复制文件# from sys import argv# scropt, from_file, to_file = argv# def file_trans_3(input, output):# 	indate = open(from_file).read()# 	output = open(to_file, 'wb').write(indate)# file_trans_3(from_file, to_file)# print "Transction complete!"# #7 写入文件# from sys import argv# script, filename = argv# def file_wirtting(target):# 	print "Opening the file %r ..." %target# 	target = open(target, 'wb').write(line1 + "\n" + line2 + "\n" + line3)# line1 = raw_input("Your 1st line :")# line2 = raw_input("Your 2nd line:")# line3 = raw_input("Your 3rd line:")# file_wirtting(filename)# ## mistake# from sys import argv# script, filename = argv# def file_wirtting(target):# 	print "Opening the file %r ..." %target# 	target.open(target, 'wb').write(line1 + "\n" + line2 + "\n" + line3)# line1 = raw_input("Your 1st line :")# line2 = raw_input("Your 2nd line:")# line3 = raw_input("Your 3rd line:")# 之前为什么错了，因为 x 不能直接 x.wirte or truncate 因为这个是在 open 之后的操作# 8 先清空，再写入文件from sys import argvscript, filename = argvdef file_wirtting(target):	print "Opening the file %s ..." %target	file = open(target, 'wb').truncate()	file = open(target, 'ab+')	file.write(line1 + "\n" + line2 + "\n" + line3 + "\n")	file.close()line1 = raw_input("Your 1st line :")line2 = raw_input("Your 2nd line :")line3 = raw_input("Your 3rd line :")file_wirtting(filename)# Q:为什么不直接 file = open(target, 'ab+').truncate()，然后接 file.write(line1...)# > 因为当 file = open(target,'ab+') 时，file 就包含了这个指令即以追加方式打开输入的 target 文件，如果以 file = open(target, 'ab+').truncate(). 则定义 file 为以追加方式打开 target 文件并清空。 file.write() = file = open(target, 'ab+').truncate().write()